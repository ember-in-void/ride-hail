services:
  postgres:
    image: postgis/postgis:16-3.4
    container_name: ridehail-postgres
    environment:
      POSTGRES_DB: ridehail_db
      POSTGRES_USER: ridehail_user
      POSTGRES_PASSWORD: ridehail_pass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ridehail_user -d ridehail_db"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ridehail-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: ridehail-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    networks:
      - ridehail-network

  app-ride:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    container_name: ridehail-ride
    command: ["./ride-hail-system", "-service=ride"]
    environment:
      CONFIG_DIR: /app/config
      DB_HOST: postgres
      RABBITMQ_HOST: rabbitmq
    volumes:
      - ../config:/app/config:ro
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "3000:3000"
      - "8080:8080"
    networks:
      - ridehail-network
    restart: unless-stopped

  app-driver:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    container_name: ridehail-driver
    command: ["./ride-hail-system", "-service=driver"]
    environment:
      CONFIG_DIR: /app/config
      DB_HOST: postgres
      RABBITMQ_HOST: rabbitmq
    volumes:
      - ../config:/app/config:ro
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "3001:3001"
    networks:
      - ridehail-network
    restart: unless-stopped

  app-admin:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    container_name: ridehail-admin
    command: ["./ride-hail-system", "-service=admin"]
    environment:
      CONFIG_DIR: /app/config
      DB_HOST: postgres
      RABBITMQ_HOST: rabbitmq
    volumes:
      - ../config:/app/config:ro
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "3004:3004"
    networks:
      - ridehail-network
    restart: unless-stopped

volumes:
  pgdata:
  rabbitmqdata:

networks:
  ridehail-network:
    driver: bridge